@model MyClass.Model.Menus

@{
    ViewBag.Title = "Chỉnh sửa thông tin";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedAt)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.Status)

    if (Model.TypeMenu != "custom")
    {
        @Html.HiddenFor(model => model.Link);
    }
    <div class="wrapper">
        <!-- Main Sidebar Container -->
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Main content -->
            <section class="content">

                <!-- Default box -->
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-6">
                                <strong class="text-danger">CHỈNH SỬA MENU</strong>
                            </div>
                            <div class="col-md-6 text-right">
                                <a href="@Url.Action("Index","Menu")" class="btn-sm btn-primary"><i class="fa fa-long-arrow-alt-left">Quay lại</i></a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @*Phần điền nội dung*@
                            <div class="col-md-9">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @if (Model.TypeMenu == "custom")
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Position, (IEnumerable<SelectListItem>)ViewBag.PositionList, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TypeMenu, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.TypeMenu, (IEnumerable<SelectListItem>)ViewBag.TypeMenuList, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            @*Phần chọn từ danh sách*@
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.ParentId, (SelectList)ViewBag.ParentIDList, "Cấp Cha", new { @class = "form-control" })
                                        @*@Html.EditorFor(model => model.ParentId, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Order, (SelectList)ViewBag.OrderList, "Sắp xếp", new { @class = "form-control" })
                                        @*@Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <!-- Nút lưu-->
                            <button class="btn-sm btn-success" type="submit" name="create"> Lưu/Thêm <i class="fa fa-save"></i></button>
                        </div>
                    </div> <!-- /.card-footer-->
                </div><!-- /.card -->
            </section><!-- /.content -->
        </div> <!-- /.content-wrapper -->
    </div><!-- ./wrapper -->
}
